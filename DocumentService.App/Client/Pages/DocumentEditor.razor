@using DocumentService.Infrastructure.DTOs;
@inject HttpClient Http

@page "/editor/{Id?}"

<PageTitle>Editor</PageTitle>

<head>
    <link href="/Styles/DocumentEditor.css" rel="stylesheet">
</head>

<h1>DocumentEditor</h1>

@if (documentDto is not null)
{
    <EditForm Model="@documentDto" OnSubmit="@HandleSubmit">
        <div>
            <label>
                <h3>Title</h3>
                <InputText @bind-Value="documentDto.Title" class="title"/>
            </label>
        </div>
        <div>
            <label>
                <h3>Description</h3>
                <InputTextArea @bind-Value="documentDto.Description" class="description" rows="3" column="5"/>
            </label>
        </div>
        <div>
            <label>
                <h3>Content</h3>
                <InputTextArea @bind-Value="documentDto.Content" class="content" rows="7" column="10" />
            </label>
        </div>

        <button type="submit">Submit</button>
    </EditForm>
}

@code {
    private DocumentDto? documentDto;

    [Parameter]
    public string? Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Id is null)
            return;
        documentDto = await Http.GetFromJsonAsync<DocumentDto>
       ($"https://localhost:7013/api/Document/{Id}"); 
    }

    private async void HandleSubmit()
    {
        await Http.PutAsJsonAsync<DocumentDto>($"https://localhost:7013/api/Document/{Id}", documentDto);
    }
}
